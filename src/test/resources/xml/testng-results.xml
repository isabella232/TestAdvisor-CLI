<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="7" passed="6">
  <reporter-output>
  </reporter-output>
  <suite name="OpenGlobe.SFDCSmoke.TestCases" duration-ms="1025127" started-at="2021-05-25T10:23:42 GMT" finished-at="2021-05-25T10:40:47 GMT">
    <groups>
    </groups>
    <test name="Command line test" duration-ms="1025127" started-at="2021-05-25T10:23:42 GMT" finished-at="2021-05-25T10:40:47 GMT">
      <class name="OpenGlobe.SFDCSmoke.TestCases">
        <test-method status="PASS" signature="beforeSuite()[pri:0, instance:OpenGlobe.SFDCSmoke.TestCases@52a86356]" name="beforeSuite" is-config="true" duration-ms="260" started-at="2021-05-25T10:23:42 GMT" finished-at="2021-05-25T10:23:42 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:OpenGlobe.SFDCSmoke.TestCases@52a86356]" name="beforeClass" is-config="true" duration-ms="159" started-at="2021-05-25T10:23:42 GMT" finished-at="2021-05-25T10:23:42 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:OpenGlobe.SFDCSmoke.TestCases@52a86356]" name="beforeMethod" is-config="true" duration-ms="15938" started-at="2021-05-25T10:23:42 GMT" finished-at="2021-05-25T10:23:58 GMT">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void OpenGlobe.SFDCSmoke.TestCases.SFWDCM0102() throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="SFWDCM0102()[pri:0, instance:OpenGlobe.SFDCSmoke.TestCases@52a86356]" name="SFWDCM0102" duration-ms="117621" started-at="2021-05-25T10:23:58 GMT" finished-at="2021-05-25T10:25:56 GMT">
          <exception class="org.openqa.selenium.StaleElementReferenceException">
            <message>
              <![CDATA[stale element reference: element is not attached to the page document
  (Session info: chrome=90.0.4430.72)
  (Driver info: chromedriver=90.0.4430.24 (4c6d850f087da467d926e8eddb76550aed655991-refs/branch-heads/4430@{#429}),platform=Windows NT 10.0.10586 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/stale_element_reference.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'cqe-jenkins-node-3.eng.sfdc.net', ip: '10.233.160.143', os.name: 'Linux', os.arch: 'amd64', os.version: '3.10.0-1160.el7.x86_64', java.version: '1.8.0_262'
Driver info: org.openqa.selenium.remote.RemoteWebDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 90.0.4430.24 (4c6d850f087da..., userDataDir: C:\Users\ADMINI~1\AppData\L...}, cssSelectorsEnabled: true, databaseEnabled: false, goog:chromeOptions: {debuggerAddress: localhost:64533}, handlesAlerts: true, hasMetadata: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), rotatable: false, setWindowRect: true, strictFileInteractability: false, takesHeapSnapshot: true, takesScreenshot: true, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unexpectedAlertBehaviour: ignore, unhandledPromptBehavior: ignore, version: 90.0.4430.72, webStorageEnabled: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true, webdriver.remote.sessionid: c338e7e6c3c54f37b8dfcfba329...}
Session ID: c338e7e6c3c54f37b8dfcfba329cfbf5]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.StaleElementReferenceException: stale element reference: element is not attached to the page document
  (Session info: chrome=90.0.4430.72)
  (Driver info: chromedriver=90.0.4430.24 (4c6d850f087da467d926e8eddb76550aed655991-refs/branch-heads/4430@{#429}),platform=Windows NT 10.0.10586 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/stale_element_reference.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'cqe-jenkins-node-3.eng.sfdc.net', ip: '10.233.160.143', os.name: 'Linux', os.arch: 'amd64', os.version: '3.10.0-1160.el7.x86_64', java.version: '1.8.0_262'
Driver info: org.openqa.selenium.remote.RemoteWebDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 90.0.4430.24 (4c6d850f087da..., userDataDir: C:\Users\ADMINI~1\AppData\L...}, cssSelectorsEnabled: true, databaseEnabled: false, goog:chromeOptions: {debuggerAddress: localhost:64533}, handlesAlerts: true, hasMetadata: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), rotatable: false, setWindowRect: true, strictFileInteractability: false, takesHeapSnapshot: true, takesScreenshot: true, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unexpectedAlertBehaviour: ignore, unhandledPromptBehavior: ignore, version: 90.0.4430.72, webStorageEnabled: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true, webdriver.remote.sessionid: c338e7e6c3c54f37b8dfcfba329...}
Session ID: c338e7e6c3c54f37b8dfcfba329cfbf5
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214)
at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166)
at org.openqa.selenium.remote.http.JsonHttpResponseCodec.reconstructValue(JsonHttpResponseCodec.java:40)
at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:80)
at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:44)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:285)
at org.openqa.selenium.remote.RemoteWebElement.isDisplayed(RemoteWebElement.java:326)
at sun.reflect.GeneratedMethodAccessor21.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at com.salesforce.selenium.support.event.EventFiringWebDriver$EventFiringWebElement$1.invoke(EventFiringWebDriver.java:599)
at com.sun.proxy.$Proxy16.isDisplayed(Unknown Source)
at com.salesforce.selenium.support.event.EventFiringWebDriver$EventFiringWebElement.isDisplayed(EventFiringWebDriver.java:775)
at org.openqa.selenium.support.ui.ExpectedConditions$8.apply(ExpectedConditions.java:233)
at org.openqa.selenium.support.ui.ExpectedConditions$8.apply(ExpectedConditions.java:228)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:249)
at Utilities.commanFunctions.fluent_wait(commanFunctions.java:155)
at Utilities.commanFunctions.GlobalSearch(commanFunctions.java:286)
at OpenGlobe.SFDCSmoke.TCA_CampaignOperations.Campaign_Create(TCA_CampaignOperations.java:256)
at OpenGlobe.SFDCSmoke.TestCases.SFWDCM0102(TestCases.java:156)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1259)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:70)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:109)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:111)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:164)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:110)
at org.apache.maven.surefire.booter.SurefireStarter.invokeProvider(SurefireStarter.java:175)
at org.apache.maven.surefire.booter.SurefireStarter.runSuitesInProcessWhenForked(SurefireStarter.java:107)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:68)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.StaleElementReferenceException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SFWDCM0102 -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:OpenGlobe.SFDCSmoke.TestCases@52a86356]" name="afterMethod" is-config="true" duration-ms="74" started-at="2021-05-25T10:25:56 GMT" finished-at="2021-05-25T10:25:56 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="closeApp(org.testng.ITestResult)[pri:0, instance:OpenGlobe.SFDCSmoke.TestCases@52a86356]" name="closeApp" is-config="true" duration-ms="8946" started-at="2021-05-25T10:25:56 GMT" finished-at="2021-05-25T10:26:05 GMT">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SFWDCM0102 status=FAILURE method=TestCases.SFWDCM0102()[pri:0, instance:OpenGlobe.SFDCSmoke.TestCases@52a86356] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeApp -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:OpenGlobe.SFDCSmoke.TestCases@52a86356]" name="beforeMethod" is-config="true" duration-ms="11141" started-at="2021-05-25T10:26:05 GMT" finished-at="2021-05-25T10:26:16 GMT">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void OpenGlobe.SFDCSmoke.TestCases.SFWDCO01() throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="SFWDCO01()[pri:0, instance:OpenGlobe.SFDCSmoke.TestCases@52a86356]" name="SFWDCO01" duration-ms="46019" started-at="2021-05-25T10:26:16 GMT" finished-at="2021-05-25T10:27:02 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SFWDCO01 -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:OpenGlobe.SFDCSmoke.TestCases@52a86356]" name="afterMethod" is-config="true" duration-ms="36" started-at="2021-05-25T10:27:02 GMT" finished-at="2021-05-25T10:27:02 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="closeApp(org.testng.ITestResult)[pri:0, instance:OpenGlobe.SFDCSmoke.TestCases@52a86356]" name="closeApp" is-config="true" duration-ms="8368" started-at="2021-05-25T10:27:02 GMT" finished-at="2021-05-25T10:27:11 GMT">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SFWDCO01 status=SUCCESS method=TestCases.SFWDCO01()[pri:0, instance:OpenGlobe.SFDCSmoke.TestCases@52a86356] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeApp -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:OpenGlobe.SFDCSmoke.TestCases@52a86356]" name="beforeMethod" is-config="true" duration-ms="15440" started-at="2021-05-25T10:27:11 GMT" finished-at="2021-05-25T10:27:26 GMT">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void OpenGlobe.SFDCSmoke.TestCases.SFWDLE010203() throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="SFWDLE010203()[pri:0, instance:OpenGlobe.SFDCSmoke.TestCases@52a86356]" name="SFWDLE010203" duration-ms="117470" started-at="2021-05-25T10:27:26 GMT" finished-at="2021-05-25T10:29:23 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SFWDLE010203 -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:OpenGlobe.SFDCSmoke.TestCases@52a86356]" name="afterMethod" is-config="true" duration-ms="44" started-at="2021-05-25T10:29:23 GMT" finished-at="2021-05-25T10:29:24 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="closeApp(org.testng.ITestResult)[pri:0, instance:OpenGlobe.SFDCSmoke.TestCases@52a86356]" name="closeApp" is-config="true" duration-ms="14769" started-at="2021-05-25T10:29:24 GMT" finished-at="2021-05-25T10:29:38 GMT">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SFWDLE010203 status=SUCCESS method=TestCases.SFWDLE010203()[pri:0, instance:OpenGlobe.SFDCSmoke.TestCases@52a86356] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeApp -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:OpenGlobe.SFDCSmoke.TestCases@52a86356]" name="beforeMethod" is-config="true" duration-ms="11622" started-at="2021-05-25T10:29:38 GMT" finished-at="2021-05-25T10:29:50 GMT">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void OpenGlobe.SFDCSmoke.TestCases.SFWDOPP0301020304() throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="SFWDOPP0301020304()[pri:0, instance:OpenGlobe.SFDCSmoke.TestCases@52a86356]" name="SFWDOPP0301020304" duration-ms="88135" started-at="2021-05-25T10:29:50 GMT" finished-at="2021-05-25T10:31:18 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SFWDOPP0301020304 -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:OpenGlobe.SFDCSmoke.TestCases@52a86356]" name="afterMethod" is-config="true" duration-ms="32" started-at="2021-05-25T10:31:18 GMT" finished-at="2021-05-25T10:31:18 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="closeApp(org.testng.ITestResult)[pri:0, instance:OpenGlobe.SFDCSmoke.TestCases@52a86356]" name="closeApp" is-config="true" duration-ms="7258" started-at="2021-05-25T10:31:18 GMT" finished-at="2021-05-25T10:31:25 GMT">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SFWDOPP0301020304 status=SUCCESS method=TestCases.SFWDOPP0301020304()[pri:0, instance:OpenGlobe.SFDCSmoke.TestCases@52a86356] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeApp -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:OpenGlobe.SFDCSmoke.TestCases@52a86356]" name="beforeMethod" is-config="true" duration-ms="12245" started-at="2021-05-25T10:31:25 GMT" finished-at="2021-05-25T10:31:38 GMT">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void OpenGlobe.SFDCSmoke.TestCases.SFWormaldAC0102() throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="SFWormaldAC0102()[pri:0, instance:OpenGlobe.SFDCSmoke.TestCases@52a86356]" name="SFWormaldAC0102" duration-ms="75293" started-at="2021-05-25T10:31:38 GMT" finished-at="2021-05-25T10:32:53 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SFWormaldAC0102 -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:OpenGlobe.SFDCSmoke.TestCases@52a86356]" name="afterMethod" is-config="true" duration-ms="34" started-at="2021-05-25T10:32:53 GMT" finished-at="2021-05-25T10:32:53 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="closeApp(org.testng.ITestResult)[pri:0, instance:OpenGlobe.SFDCSmoke.TestCases@52a86356]" name="closeApp" is-config="true" duration-ms="7721" started-at="2021-05-25T10:32:53 GMT" finished-at="2021-05-25T10:33:01 GMT">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SFWormaldAC0102 status=SUCCESS method=TestCases.SFWormaldAC0102()[pri:0, instance:OpenGlobe.SFDCSmoke.TestCases@52a86356] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeApp -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:OpenGlobe.SFDCSmoke.TestCases@52a86356]" name="beforeMethod" is-config="true" duration-ms="11652" started-at="2021-05-25T10:33:01 GMT" finished-at="2021-05-25T10:33:12 GMT">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void OpenGlobe.SFDCSmoke.TestCases.SF_SMOKE_UPG_1_2_3_4_5_10() throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="SF_SMOKE_UPG_1_2_3_4_5_10()[pri:0, instance:OpenGlobe.SFDCSmoke.TestCases@52a86356]" name="SF_SMOKE_UPG_1_2_3_4_5_10" duration-ms="243325" started-at="2021-05-25T10:33:12 GMT" finished-at="2021-05-25T10:37:16 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SF_SMOKE_UPG_1_2_3_4_5_10 -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:OpenGlobe.SFDCSmoke.TestCases@52a86356]" name="afterMethod" is-config="true" duration-ms="39" started-at="2021-05-25T10:37:16 GMT" finished-at="2021-05-25T10:37:16 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="closeApp(org.testng.ITestResult)[pri:0, instance:OpenGlobe.SFDCSmoke.TestCases@52a86356]" name="closeApp" is-config="true" duration-ms="24073" started-at="2021-05-25T10:37:16 GMT" finished-at="2021-05-25T10:37:40 GMT">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SF_SMOKE_UPG_1_2_3_4_5_10 status=SUCCESS method=TestCases.SF_SMOKE_UPG_1_2_3_4_5_10()[pri:0, instance:OpenGlobe.SFDCSmoke.TestCases@52a86356] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeApp -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:OpenGlobe.SFDCSmoke.TestCases@52a86356]" name="beforeMethod" is-config="true" duration-ms="10373" started-at="2021-05-25T10:37:40 GMT" finished-at="2021-05-25T10:37:50 GMT">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void OpenGlobe.SFDCSmoke.TestCases.SF_SMOKE_UPG_6_7_8_9() throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="SF_SMOKE_UPG_6_7_8_9()[pri:0, instance:OpenGlobe.SFDCSmoke.TestCases@52a86356]" name="SF_SMOKE_UPG_6_7_8_9" duration-ms="161768" started-at="2021-05-25T10:37:50 GMT" finished-at="2021-05-25T10:40:32 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SF_SMOKE_UPG_6_7_8_9 -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:OpenGlobe.SFDCSmoke.TestCases@52a86356]" name="afterMethod" is-config="true" duration-ms="18" started-at="2021-05-25T10:40:32 GMT" finished-at="2021-05-25T10:40:32 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="closeApp(org.testng.ITestResult)[pri:0, instance:OpenGlobe.SFDCSmoke.TestCases@52a86356]" name="closeApp" is-config="true" duration-ms="14415" started-at="2021-05-25T10:40:32 GMT" finished-at="2021-05-25T10:40:46 GMT">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SF_SMOKE_UPG_6_7_8_9 status=SUCCESS method=TestCases.SF_SMOKE_UPG_6_7_8_9()[pri:0, instance:OpenGlobe.SFDCSmoke.TestCases@52a86356] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeApp -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:OpenGlobe.SFDCSmoke.TestCases@52a86356]" name="afterClass" is-config="true" duration-ms="1038" started-at="2021-05-25T10:40:46 GMT" finished-at="2021-05-25T10:40:47 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="afterSuite()[pri:0, instance:OpenGlobe.SFDCSmoke.TestCases@52a86356]" name="afterSuite" is-config="true" duration-ms="5" started-at="2021-05-25T10:40:47 GMT" finished-at="2021-05-25T10:40:47 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- OpenGlobe.SFDCSmoke.TestCases -->
    </test> <!-- Command line test -->
  </suite> <!-- OpenGlobe.SFDCSmoke.TestCases -->
</testng-results>